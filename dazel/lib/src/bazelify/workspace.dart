import 'initialize.dart';

/// Generates a `WORKSPACE` file.
class Workspace {
  final DartRulesSource _dartSource;
  final String _localSdk;

  /// Create a workspace using an existing [DartRulesSource] location.
  Workspace.fromDartSource(this._dartSource, this._localSdk);

  @override
  String toString() {
    var localSdkArg = _localSdk == null ? '' : 'local_sdk = "$_localSdk"';
    return '# Automatically generated by "pub run dazel".\n'
        '# DO NOT MODIFY BY HAND\n\n'
        '# Include the Dart SDK and language extensions for Bazel.\n'
        '$_dartSource'
        'load(\n'
        '    "@io_bazel_rules_dart//dart/build_rules:repositories.bzl",\n'
        '    "dart_repositories",\n'
        ')\n'
        'dart_repositories($localSdkArg)\n\n'
        '# Include the packages resolved from pubspec.yaml.\n'
        'load(\n'
        '    "//:packages.bzl",\n'
        '    "dazel_init",\n'
        ')\n'
        'dazel_init()\n';
  }
}
